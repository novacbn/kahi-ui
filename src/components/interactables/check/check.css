/**
 * TODO: This could probably be cleaned up
 */

[type="checkbox"] {
    --palette-background-bg: theme("colors.default.300");
    --palette-foreground-bg: theme("colors.default.500");
    --palette-foreground-text: theme("colors.light.200");

    --radius: theme("borderRadius.sm");

    --size-text: inherit;
    --size-line-height: inherit;
}

[type="checkbox"]:not([role]) {
    @apply appearance-none align-middle bg-transparent cursor-pointer inline-flex items-center
    justify-center p-[0.5em] relative rounded-md select-none leading-[var(--size-line-height)] whitespace-nowrap;

    background-color: rgba(var(--palette-background-bg), theme("opacity.25"));

    font-size: var(--size-text);

    outline: none !important;
    transform: scale(1);

    transition: background-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
        color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
        transform 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);

    &:disabled {
        @apply cursor-not-allowed opacity-40;
    }

    &::before {
        @apply h-[1.5ex] w-[1.5ex];

        content: "";

        background-color: currentColor;

        clip-path: inset(50% 50% 50% 50% round var(--radius));
        transition: clip-path 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    &:enabled:active,
    &[aria-pressed="true"] {
        transform: scale(0.95);
    }

    &:not(:checked) {
        @apply text-[rgb(var(--palette-background-bg))];

        &:enabled:hover,
        &[aria-pressed="true"] {
            &::before {
                @apply;

                clip-path: inset(0% 0% 0% 0% round var(--radius));
            }
        }

        &:enabled:is(:active, :hover),
        &[aria-pressed="true"] {
            @apply;

            background-color: rgba(var(--palette-background-bg), theme("opacity.50"));
        }
    }

    &:checked {
        @apply bg-[rgb(var(--palette-foreground-bg))] text-[rgb(var(--palette-foreground-text))];

        &::before {
            @apply;

            clip-path: inset(0% 0% 0% 0% round var(--radius));
        }

        &:enabled:hover,
        &[aria-pressed="true"] {
            @apply;

            background-color: rgba(var(--palette-foreground-bg), theme("opacity.75"));
        }
    }

    &:is([data-size="tiny"], [data-size="small"]) {
        @apply rounded-DEFAULT;

        &::before {
            @apply h-[1ex] w-[1ex];
        }
    }

    &:is([data-size="large"], [data-size="huge"]) {
        --radius: theme("borderRadius.md");

        @apply rounded-lg;

        &::before {
            @apply h-[2ex] w-[2ex];
        }
    }
}

html[data-palette="dark"] {
    & [type="checkbox"] {
        &:not([data-palette]) {
            --palette-background-bg: theme("colors.default.700");
        }
    }
}

@media (prefers-color-scheme: dark) {
    html:not([data-palette]) {
        &[type="checkbox"] {
            &:not([data-palette]) {
                --palette-background-bg: theme("colors.default.700");
            }
        }
    }
}
