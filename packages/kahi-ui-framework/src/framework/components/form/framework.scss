$check: "input[type='checkbox']:not([role])";
$label: "label";
$radio: "input[type='radio']";
$switch: "input[type='checkbox'][role='switch']";
$text: ":is(input[type='email'], input[type='password'], input[type='text'], input[type='search'], input[type='url'], textarea)";

$form-disabled: ":disabled";

$form-field-focus: ":enabled:is(:active, :focus)";
$form-field-hover: ":enabled:hover";

$form-toggle-active: ":enabled:is(:active, :checked)";
$form-toggle-hover: ":enabled:is(:focus, :hover)";

/**
 * TODO: `<fieldset>`, `<legend>` and any other stragglers
 */

@mixin form-base() {
    @include use-palette(--form-palette);

    appearance: none;

    display: inline-block;
    position: relative;

    margin: 0;

    border: var(--form-border) hsla(var(--background), var(--form-opacity-border-default));

    font-family: var(--form-font-family);
    font-weight: var(--form-font-weight);

    vertical-align: middle;

    outline: none;
    opacity: var(--form-opacity-default);

    transition: background-color var(--form-transition-visual),
        border-color var(--form-transition-visual), color var(--form-transition-visual),
        opacity var(--form-transition-visual);

    &#{$form-disabled} {
        cursor: not-allowed;
        opacity: var(--form-opacity-disabled);
    }
}

@mixin form-field-base() {
    @include form-base();

    padding: var(--form-field-padding-default);
    width: 100%;

    background-color: transparent;
    color: currentColor;

    border-radius: var(--form-radius-default);
    box-shadow: none;

    font-size: var(--form-field-font-size);
    line-height: 1;

    cursor: text;

    &#{$form-disabled} {
        user-select: none;
    }

    &::placeholder {
        color: currentColor;

        font-size: inherit;
        opacity: var(--form-field-placeholder-opacity);
    }

    &::selection {
        background-color: vhsl(--background);
        color: vhsl(--color);
    }

    &[data-shape="pill"] {
        border-radius: var(--form-radius-pill);
        padding: var(--form-field-padding-pill);
    }

    &:not([data-validate]) {
        border-color: hsla(var(--background), var(--form-opacity-border-default));

        &#{$form-field-hover} {
            border-color: hsla(var(--background), var(--form-opacity-border-hover));
        }

        &#{$form-field-focus} {
            border-color: hsla(var(--background), var(--form-opacity-border-active));
        }
    }

    &[data-validate] {
        &:invalid {
            border-color: hsla(var(--form-field-invalid-color), var(--form-opacity-border-default));

            &#{$form-field-hover} {
                border-color: hsla(
                    var(--form-field-invalid-color),
                    var(--form-opacity-border-hover)
                );
            }

            &#{$form-field-focus} {
                border-color: hsla(
                    var(--form-field-invalid-color),
                    var(--form-opacity-border-active)
                );
            }
        }

        &:valid {
            border-color: hsla(var(--form-field-valid-color), var(--form-opacity-border-default));

            &#{$form-field-hover} {
                border-color: hsla(var(--form-field-valid-color), var(--form-opacity-border-hover));
            }

            &#{$form-field-focus} {
                border-color: hsla(
                    var(--form-field-valid-color),
                    var(--form-opacity-border-active)
                );
            }
        }
    }
}

@mixin form-toggle-base() {
    @include form-base();

    padding: var(--form-toggle-padding);

    background-color: transparent;
    color: transparent;

    font-size: var(--form-toggle-font-size);

    cursor: pointer;
    user-select: none;

    &#{$form-toggle-hover} {
        border-color: hsla(var(--background), var(--form-opacity-border-hover));
        color: hsla(var(--background), var(--form-opacity-color-hover));
    }

    &#{$form-toggle-active} {
        background-color: hsla(var(--background), var(--form-opacity-background-active));
        border-color: hsla(var(--background), var(--form-opacity-border-active));
        color: hsla(var(--color), var(--form-opacity-color-active));
    }

    &::before,
    &::after {
        height: 1em;

        background: currentColor;
        transition: background var(--form-transition-visual);
    }
}

#{$check} {
    @include form-toggle-base();

    border-radius: var(--form-radius-default);

    &::before,
    &::after {
        display: block;
        content: "";

        width: 1em;

        border-radius: var(--form-radius-default);
        transform: rotate(45deg);
    }

    &::before {
        clip-path: var(--form-check-default-clip-path-before);
    }

    &::after {
        position: absolute;
        top: calc(50% - 0.5em);
        left: calc(50% - 0.5em);

        clip-path: var(--form-check-default-clip-path-after);
    }

    &[data-variation="cross"] {
        &::before {
            clip-path: var(--form-check-cross-clip-path-before);
        }

        &::after {
            clip-path: var(--form-check-cross-clip-path-after);
        }
    }
}

#{$radio} {
    @include form-toggle-base();

    border-radius: var(--form-radius-circle);

    &::after {
        display: block;
        content: "";

        width: 1em;

        clip-path: var(--form-radio-clip-path);
    }
}

#{$switch} {
    @include form-toggle-base();

    color: hsla(var(--background), var(--form-opacity-color-default));
    border-radius: var(--form-radius-default);

    &::after {
        display: block;
        content: "";

        width: 2.5em;

        clip-path: var(--form-switch-clip-path-enabled);
        transition: clip-path var(--form-transition-movement);
    }

    &#{$form-toggle-active}::after {
        clip-path: var(--form-switch-clip-path-active);
    }
}

#{$text} {
    @include form-field-base();
}

textarea {
    display: block;
    max-width: 100%;
}
