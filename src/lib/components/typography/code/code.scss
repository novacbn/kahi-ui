@use "../../../../framework/mixins/borders";
@use "../../../../framework/mixins/colors";
@use "../../../../framework/mixins/fonts";
@use "../../../../framework/mixins/intrinsics";
@use "../../../../framework/mixins/palettes";
@use "../../../../framework/mixins/radius";
@use "../../../../framework/mixins/transitions";

@if not env("DISABLE_COMPONENTS_TYPOGRAPHY_CODE") {
    .code,
    .article > :is(code, pre) {
        @include palettes.var-palette($palette: "neutral");

        position: relative;

        @include intrinsics.padding-all($namespace: "code", $unit: em);

        @include colors.background($namespace: "code", $face: "background", $shade: "bolder");
        @include fonts.family($namespace: "code");
        @include radius.all($namespace: "code", $unit: em);

        @include borders.transitions();
        @include colors.transitions-background();

        @include transitions.build();
    }

    code.code,
    .article > code {
        @include fonts.size($namespace: "text.small", $unit: em);

        overflow-wrap: break-word;
    }

    pre.code,
    .article > pre {
        overflow-x: auto;

        & > code {
            white-space: pre;
        }
    }

    .article > pre:not(:last-child) {
        @include intrinsics.margin-bottom($namespace: "code.article", $unit: em);
    }
}
