@use "sass:map";

@use "../abstracts/palettes";
@use "../abstracts/variables";
@use "../abstracts/viewports";
@use "../abstracts/themes";

:root {
    /** */

    --scrollbar-background: var(--palette-off-dark-lightest);
    --scrollbar-foreground: var(--palette-dark-normal);
    --scrollbar-size: theme("width.1");

    /** */

    --document-background: var(--palette-auto-off-lightest);
    --document-foreground: var(--palette-inverse-normal);

    --document-font-size: 16px;
    --document-font-line-height: 1.5rem;

    --selection-background: var(--palette-accent-boldest);
    --selection-foreground: var(--palette-light-normal);
}

/**
 * HACK: Really lame to have to duplicate dark mode variables
 */

@media (prefers-color-scheme: dark) {
    :root:not([data-palette]) {
        /** */

        --scrollbar-background: var(--palette-off-dark-boldest);
        --scrollbar-foreground: var(--palette-dark-normal);
    }
}

:root[data-palette="dark"] {
    /** */

    --scrollbar-background: var(--palette-off-dark-boldest);
    --scrollbar-foreground: var(--palette-dark-normal);
}

@include themes.query-theme-mode("light") {
    --palettes-dark-lightest: #{palettes.get-shade("dark", 6, $is-raw: true)};
    --palettes-dark-lighter: #{palettes.get-shade("dark", 5, $is-raw: true)};
    --palettes-dark-light: #{palettes.get-shade("dark", 4, $is-raw: true)};
    --palettes-dark-normal: #{palettes.get-shade("dark", 3, $is-raw: true)};
    --palettes-dark-bold: #{palettes.get-shade("dark", 2, $is-raw: true)};
    --palettes-dark-bolder: #{palettes.get-shade("dark", 1, $is-raw: true)};
    --palettes-dark-boldest: #{palettes.get-shade("dark", 0, $is-raw: true)};

    --palettes-light-lightest: #{palettes.get-shade("light", -0, $is-raw: true)};
    --palettes-light-lighter: #{palettes.get-shade("light", -1, $is-raw: true)};
    --palettes-light-light: #{palettes.get-shade("light", -2, $is-raw: true)};
    --palettes-light-normal: #{palettes.get-shade("light", -3, $is-raw: true)};
    --palettes-light-bold: #{palettes.get-shade("light", -4, $is-raw: true)};
    --palettes-light-bolder: #{palettes.get-shade("light", -5, $is-raw: true)};
    --palettes-light-boldest: #{palettes.get-shade("light", -6, $is-raw: true)};

    @include palettes.each() using ($background, $foreground) {
        @if $background != "dark" and $background != "light" {
            --palettes-#{$background}-lightest: #{palettes.get-shade(
                    $background,
                    6,
                    $is-raw: true
                )};
            --palettes-#{$background}-lighter: #{palettes.get-shade($background, 5, $is-raw: true)};
            --palettes-#{$background}-light: #{palettes.get-shade($background, 4, $is-raw: true)};

            --palettes-#{$background}-normal: #{palettes.get-shade($background, 3, $is-raw: true)};

            --palettes-#{$background}-bold: #{palettes.get-shade($background, 2, $is-raw: true)};
            --palettes-#{$background}-bolder: #{palettes.get-shade($background, 1, $is-raw: true)};
            --palettes-#{$background}-boldest: #{palettes.get-shade($background, 0, $is-raw: true)};
        }
    }

    --palettes-auto-lightest: var(--palette-light-lightest);
    --palettes-auto-lighter: var(--palette-light-lighter);
    --palettes-auto-light: var(--palette-light-light);
    --palettes-auto-normal: var(--palette-light-normal);
    --palettes-auto-bold: var(--palette-light-bold);
    --palettes-auto-bolder: var(--palette-light-bolder);
    --palettes-auto-boldest: var(--palette-light-boldest);

    --palettes-inverse-lightest: var(--palette-dark-lightest);
    --palettes-inverse-lighter: var(--palette-dark-lighter);
    --palettes-inverse-light: var(--palette-dark-light);
    --palettes-inverse-normal: var(--palette-dark-normal);
    --palettes-inverse-bold: var(--palette-dark-bold);
    --palettes-inverse-bolder: var(--palette-dark-bolder);
    --palettes-inverse-boldest: var(--palette-dark-boldest);
}

@include themes.query-theme-mode("dark") {
    --palettes-dark-lightest: #{palettes.get-shade("dark", 0, $is-raw: true)};
    --palettes-dark-lighter: #{palettes.get-shade("dark", 1, $is-raw: true)};
    --palettes-dark-light: #{palettes.get-shade("dark", 2, $is-raw: true)};
    --palettes-dark-normal: #{palettes.get-shade("dark", 3, $is-raw: true)};
    --palettes-dark-bold: #{palettes.get-shade("dark", 4, $is-raw: true)};
    --palettes-dark-bolder: #{palettes.get-shade("dark", 5, $is-raw: true)};
    --palettes-dark-boldest: #{palettes.get-shade("dark", 6, $is-raw: true)};

    --palettes-light-lightest: #{palettes.get-shade("light", -6, $is-raw: true)};
    --palettes-light-lighter: #{palettes.get-shade("light", -5, $is-raw: true)};
    --palettes-light-light: #{palettes.get-shade("light", -4, $is-raw: true)};
    --palettes-light-normal: #{palettes.get-shade("light", -3, $is-raw: true)};
    --palettes-light-bold: #{palettes.get-shade("light", -2, $is-raw: true)};
    --palettes-light-bolder: #{palettes.get-shade("light", -1, $is-raw: true)};
    --palettes-light-boldest: #{palettes.get-shade("light", -0, $is-raw: true)};

    @include palettes.each() using ($background, $foreground) {
        @if $background != "dark" and $background != "light" {
            --palettes-#{$background}-lightest: #{palettes.get-shade(
                    $background,
                    -5,
                    $is-raw: true
                )};
            --palettes-#{$background}-lighter: #{palettes.get-shade(
                    $background,
                    -4,
                    $is-raw: true
                )};
            --palettes-#{$background}-light: #{palettes.get-shade($background, -3, $is-raw: true)};

            --palettes-#{$background}-normal: #{palettes.get-shade($background, -2, $is-raw: true)};

            --palettes-#{$background}-bold: #{palettes.get-shade($background, -1, $is-raw: true)};
            --palettes-#{$background}-bolder: #{palettes.get-shade($background, 0, $is-raw: true)};
            --palettes-#{$background}-boldest: #{palettes.get-shade($background, 1, $is-raw: true)};
        }
    }

    --palettes-auto-lightest: var(--palette-dark-lightest);
    --palettes-auto-lighter: var(--palette-dark-lighter);
    --palettes-auto-light: var(--palette-dark-light);
    --palettes-auto-normal: var(--palette-dark-normal);
    --palettes-auto-bold: var(--palette-dark-bold);
    --palettes-auto-bolder: var(--palette-dark-bolder);
    --palettes-auto-boldest: var(--palette-dark-boldest);

    --palettes-inverse-lightest: var(--palette-light-lightest);
    --palettes-inverse-lighter: var(--palette-light-lighter);
    --palettes-inverse-light: var(--palette-light-light);
    --palettes-inverse-normal: var(--palette-light-normal);
    --palettes-inverse-bold: var(--palette-light-bold);
    --palettes-inverse-bolder: var(--palette-light-bolder);
    --palettes-inverse-boldest: var(--palette-light-boldest);
}

:root {
    --palettes-background-lightest: var(--palette-auto-lightest);
    --palettes-background-lighter: var(--palette-auto-lighter);
    --palettes-background-light: var(--palette-auto-light);
    --palettes-background-normal: var(--palette-auto-normal);
    --palettes-background-bold: var(--palette-auto-bold);
    --palettes-background-bolder: var(--palette-auto-bolder);
    --palettes-background-boldest: var(--palette-auto-boldest);

    --palettes-foreground-lightest: var(--palette-inverse-lightest);
    --palettes-foreground-lighter: var(--palette-inverse-lighter);
    --palettes-foreground-light: var(--palette-inverse-light);
    --palettes-foreground-normal: var(--palette-inverse-normal);
    --palettes-foreground-bold: var(--palette-inverse-bold);
    --palettes-foreground-bolder: var(--palette-inverse-bolder);
    --palettes-foreground-boldest: var(--palette-inverse-boldest);

    /**
     *   NOTE: The Viewport variables below don't /actually/ do anything in
     *   the Framework. And are instead here to provide the Javascript side
     *   of things constants to reference
     */

    @include viewports.each() using ($name, $width, $minimum-width, $maximum-width) {
        --viewports-#{$name}-base: #{$width};
        --viewports-#{$name}-minimum: #{$minimum-width};
        --viewports-#{$name}-maximum: #{$maximum-width};
    }

    @include variables.each() using ($key, $value) {
        --#{variables.format-reference($key)}: #{$value};
    }
}
