@use "sass:string";

@use "./namespaces";
@use "./strings";

@mixin define-variable($key, $value) {
    @include namespaces.define-namespace("variables.#{$key}", $value);
}

@mixin define-variables($maps...) {
    @each $map in $maps {
        @include namespaces.define-namespaces(
            (
                "variables": $map,
            )
        );
    }
}

@mixin each($filter: "") {
    @include namespaces.each("variables.#{$filter}") using ($key, $value) {
        @content ($key, $value);
    }
}

@function get($key) {
    @return namespaces.get("variables.#{$key}");
}

@function has($key) {
    @return namespaces.has("variables.#{$key}");
}

@function keys($filter: "") {
    @return namespaces.keys("variables.#{$filter}");
}

@function format-reference($key) {
    @if not has($key) {
        @error "bad argument #1 to 'variables.format-reference' (invalid key '#{$key}')";
    }

    @return strings.format-identifier($key);
}

@function format-var($key, $fallback: null) {
    $key: format-reference($key);

    @if $fallback {
        @return var(#{$key}, #{$fallback});
    }

    @return var(--#{$key});
}
