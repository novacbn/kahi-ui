# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Continuous Integration

on: [push, pull_request]

concurrency:
    group: ${{github.head_ref}}
    cancel-in-progress: true

jobs:
    test-and-build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - name: Checkout
              uses: actions/checkout@v2.3.1

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"

            - name: Install
              run: npm ci

            - name: Build Library
              run: npm run build

            - name: Build Storybook Preview
              if: github.event_name == 'pull_request'
              run: npm run build:storybook

            - name: Upload Storybook Preview
              uses: actions/upload-artifact@v2
              if: github.event_name == 'pull_request'
              with:
                  name: storybook-build
                  path: storybook-static

    preview:
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'

        steps:
            - name: Download Storybook Preview
              uses: actions/download-artifact@v2
              with:
                  name: storybook-build
                  path: storybook-static

            - name: Upload to Surge
              uses: afc163/surge-preview@v1
              with:
                  github_token: ${{secrets.GITHUB_TOKEN}}
                  surge_token: ${{secrets.SURGE_TOKEN}}
                  dist: storybook-static
                  build: echo 'noop'
                  failOnError: true
