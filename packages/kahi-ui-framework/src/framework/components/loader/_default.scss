:root {
    /**
     * Loader Tokens
     */

    --loader-margin: var(--spacing-text-tiny);
    --loader-radius: var(--radius-shape-circle);

    --loader-size: var(--font-size-text-medium);
    --loader-size-tiny: var(--font-size-text-tiny);
    --loader-size-small: var(--font-size-text-small);
    --loader-size-large: var(--font-size-text-large);
    --loader-size-huge: var(--font-size-text-huge);

    /**
      * Loader Palette Tokens
      */

    --loader-default-background: var(--palette-default-base);
    --loader-default-color: var(--palette-light-base);

    --loader-accent-background: var(--palette-accent-base);
    --loader-accent-color: var(--palette-light-base);

    --loader-dark-background: var(--palette-dark-base);
    --loader-dark-color: var(--palette-light-base);

    --loader-light-background: var(--palette-light-base);
    --loader-light-color: var(--palette-dark-base);

    --loader-alert-background: var(--palette-alert-base);
    --loader-alert-color: var(--palette-light-base);

    --loader-affirmative-background: var(--palette-affirmative-base);
    --loader-affirmative-color: var(--palette-light-base);

    --loader-negative-background: var(--palette-negative-base);
    --loader-negative-color: var(--palette-light-base);

    /**
     * Loader Await Tokens
     */

    --loader-await-animation: var(--animation-capture-movement);
    /* HACK: This should technically be set via the capture variable... but can't utilize a `calc` */
    --loader-await-animation-delay: -0.625s;
    --loader-await-animation-translate: calc(var(--loader-margin) + var(--loader-size));

    /**
     * Loader Wave Tokens
     */

    /* HACK: This should technically be set via the capture variable... but can't utilize a `calc` */
    --loader-wave-animation: var(--animation-capture-movement);
    --loader-wave-animation-delay: -0.25s;
}

/**
 * Loader Animations
 */

@keyframes loader-wave {
    0% {
        transform: translateY(-100%);
    }

    50% {
        transform: translateY(100%);
    }

    100% {
        transform: translateY(-100%);
    }
}

@mixin define-loader-await($namespace, $x, $y) {
    @keyframes loader-await-#{$namespace} {
        0% {
            transform: translate(0, 0);
        }

        50% {
            transform: translate(#{$x}, #{$y});
        }

        100% {
            transform: translate(0, 0);
        }
    }
}

@include define-loader-await(
    x1y1,
    calc(var(--loader-await-animation-translate)),
    calc(var(--loader-await-animation-translate))
);
@include define-loader-await(x2y1, 0, calc(var(--loader-await-animation-translate)));
@include define-loader-await(
    x3y1,
    calc(var(--loader-await-animation-translate) * -1),
    calc(var(--loader-await-animation-translate))
);

@include define-loader-await(x1y2, calc(var(--loader-await-animation-translate)), 0);
@include define-loader-await(x3y2, calc(var(--loader-await-animation-translate) * -1), 0);

@include define-loader-await(
    x1y3,
    calc(var(--loader-await-animation-translate)),
    calc(var(--loader-await-animation-translate) * -1)
);
@include define-loader-await(x2y3, 0, calc(var(--loader-await-animation-translate) * -1));
@include define-loader-await(
    x3y3,
    calc(var(--loader-await-animation-translate) * -1),
    calc(var(--loader-await-animation-translate) * -1)
);
