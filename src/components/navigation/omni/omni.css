@variants <md {
    input[type="checkbox"][role="presentation"] {
        & + nav.omni,
        & + .context-backdrop + nav.omni {
            & > header {
                @apply flex-grow z-1;
            }

            & > footer {
                /** TODO: FIX OVERFLOW PUSHING BEYOND TOP BOUNDARY */
                @apply absolute bottom-0 bg-[rgb(var(--palette-background-bg))] text-[rgb(var(--palette-background-text))] flex
                flex-col gap-4 items-stretch justify-center right-0 rounded-bl-md overflow-y-auto px-6 py-4;

                max-height: min(85vh, 60ex);

                clip-path: inset(0% 0% 100% 0% round 0% 0% 0% theme("borderRadius.md"));
                transform: translateY(100%);

                transition: background-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
                    color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
                    clip-path 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);

                & > section {
                    @apply flex-col m-0;
                }
            }
        }

        &:not(:checked) + nav.omni,
        &:not(:checked) + .context-backdrop + nav.omni {
            & > header > .context-button:first-of-type {
                display: initial;
            }
        }

        &:checked + nav.omni,
        &:checked + .context-backdrop + nav.omni {
            &:not([data-variation~="sticky"]) {
                @apply !fixed;
            }

            & > header > .context-button:last-of-type {
                display: initial;
            }

            & > footer {
                clip-path: inset(0% 0% 0% 0% round 0% 0% 0% theme("borderRadius.md"));
            }
        }
    }
}

nav.omni {
    @apply flex px-6 py-4 relative text-current z-1;

    /** TODO: When this is a sticky, the transparency for the default palette looks terrible **/
    background-color: rgba(theme("colors.default.200"), theme("opacity.20"));

    &[data-palette] {
        @apply bg-[rgb(var(--palette-background-bg))] text-[rgb(var(--palette-background-text))];
    }

    &[data-variation~="sticky"] {
        @apply sticky top-0 z-1;
    }

    & > footer {
        @apply flex-grow;

        & > section {
            @apply flex gap-4 ml-auto;
        }
    }

    & > header {
        @apply font-bold gap-4 text-3xl select-none tracking-widest whitespace-nowrap;

        & > a {
            @apply !text-current;
        }

        & > .context-button {
            @apply hidden leading-[initial] tracking-[initial];

            font-size: initial;
        }

        & > hr[data-orientation="vertical"] {
            @apply mx-0;
        }
    }

    & > :is(footer, header) {
        @apply flex items-center;
    }
}
