.tab {
    --palette-background-bold: var(--tab-item-palette-background-bold);

    --flex-alignment-x: initial;

    --sizing-text-size: var(--tab-item-sizing-text-size);
    --sizing-text-line-height: var(--tab-item-sizing-text-line-height);

    display: flex;
    flex-wrap: wrap;

    justify-content: var(--flex-alignment-x);
}

.tab > :is(a, label) {
    display: inline-flex;
    align-items: center;
    justify-content: center;

    position: relative;

    gap: var(--tab-item-gap);

    padding: var(--tab-item-padding-y) var(--tab-item-padding-x);

    color: currentColor;
    cursor: pointer;

    font-size: var(--sizing-text-size);
    line-height: var(--sizing-text-line-height);

    text-decoration: none !important;
    user-select: none;

    transition: color var(--animation-visual-duration) var(--animation-visual-function),
        opacity var(--animation-visual-duration) var(--animation-visual-function);

    &::before {
        display: block;
        position: absolute;

        content: "";

        bottom: calc(var(--tab-item-border-width) * -1);
        left: 0;

        width: 100%;
        height: var(--tab-item-border-width);

        background: transparent;

        transition: background var(--animation-visual-duration) var(--animation-visual-function);
    }

    &[aria-disabled="true"] {
        pointer-events: none;
        opacity: var(--tab-item-disabled-opacity);
    }

    &:not([aria-disabled]):is(:focus, :hover) {
        color: rgba(var(--palette-background-bold), var(--tab-item-focus-color-opacity));

        &::before {
            background: rgba(var(--palette-background-bold), var(--tab-item-focus-color-opacity));
        }
    }
}

.tab > [role="presentation"]:checked + label:not([aria-disabled]),
.tab > :is(a, label):not([aria-disabled]):is(:active, [aria-current], [aria-pressed="true"]) {
    color: rgb(var(--palette-background-bold));

    &::before {
        background: rgb(var(--palette-background-bold));
    }
}

.tab[data-alignment-x="stretch"] {
    & > :is(a, label) {
        flex-grow: 1;
    }
}

.tab > section {
    display: block;
    position: relative;

    order: 9999;

    width: 100%;

    &::before {
        display: block;
        position: absolute;

        content: "";

        top: 0;
        left: 0;

        width: 100%;
        height: var(--tab-section-border-width);

        background: currentColor;
        opacity: var(--tab-section-border-opacity);

        z-index: -1;
    }
}

.tab > [role="presentation"] {
    display: none;
}

.tab > :is(a:not([aria-current]), [role="presentation"]:not(:checked) + label) + section {
    display: none;
}
