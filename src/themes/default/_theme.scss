@use "../../framework/abstracts/animations";
@use "../../framework/abstracts/constants";
@use "../../framework/abstracts/palettes";
@use "../../framework/abstracts/sizes";
@use "../../framework/abstracts/variables";
@use "../../framework/abstracts/viewports";

/**
 * NOTE: The below colors are mandatory in ALL themes! They are statically
 * referenced in the main Framework and Component stylesheets
 */

@include constants.define-constants(
    (
        "palettes": (
            "dark":
                palettes.generate-palette(
                    $background: hsl(217, 11%, 15%),
                    $foreground: "light",
                    $shading: 3%
                ),
            "light":
                palettes.generate-palette(
                    $background: hsl(0, 0%, 100%),
                    $foreground: "dark",
                    $shading: 1%
                ),
            "neutral":
                palettes.generate-palette(
                    $background: hsl(216, 11%, 55%),
                    $foreground: "light",
                    $shading: 3%
                ),
            "accent":
                palettes.generate-palette(
                    $background: hsl(200, 31%, 50%),
                    $foreground: "light",
                    $shading: 3%
                ),
        ),
    )
);

/**
 * NOTE: The below colors can be renamed or otherwise added / removed as desired
 */

@include constants.define-constants(
    (
        "palettes": (
            "alert":
                palettes.generate-palette(
                    $background: hsl(42, 75%, 50%),
                    $foreground: "light",
                    $shading: 3%
                ),
            "affirmative":
                palettes.generate-palette(
                    $background: hsl(146, 40%, 50%),
                    $foreground: "light",
                    $shading: 3%
                ),
            "negative":
                palettes.generate-palette(
                    $background: hsl(7, 48%, 55%),
                    $foreground: "light",
                    $shading: 3%
                ),
        ),
    )
);

/**
 * NOTE: The below viewports are mandatory in ALL themes! They are statically
 * referenced in the main Javascript codebase
 */

@include constants.define-constants(
    (
        "viewports": (
            "mobile": 640px,
            "tablet": 768px,
            "desktop": 1024px,
            "widescreen": 1280px,
        ),
    )
);

/**
 * NOTE: The below font familys are mandatory in ALL themes! They are statically
 * referenced in the main Framework and Component stylesheets
 */

@include variables.define-variables(
    (
        "fonts.families": (
            "block": (
                ui-sans-serif,
                system-ui,
                -apple-system,
                BlinkMacSystemFont,
                "Segoe UI",
                Roboto,
                "Helvetica Neue",
                Arial,
                "Noto Sans",
                sans-serif,
                "Apple Color Emoji",
                "Segoe UI Emoji",
                "Segoe UI Symbol",
                "Noto Color Emoji",
            ),
            "inline": (
                ui-sans-serif,
                system-ui,
                -apple-system,
                BlinkMacSystemFont,
                "Segoe UI",
                Roboto,
                "Helvetica Neue",
                Arial,
                "Noto Sans",
                sans-serif,
                "Apple Color Emoji",
                "Segoe UI Emoji",
                "Segoe UI Symbol",
                "Noto Color Emoji",
            ),
            "monospace": (
                ui-monospace,
                SFMono-Regular,
                Menlo,
                Monaco,
                Consolas,
                "Liberation Mono",
                "Courier New",
                monospace,
            ),
        ),
    )
);

/**
 * NOTE: The below font sizes / families are mandatory in ALL themes! They are statically
 * referenced in the main Framework and Component stylesheets
 */

@include variables.define-variables(
    (
        "fonts": (
            "letter-spacings": sizes.generate-scaling($base: 0.025, $ratio: 2),
            "line-heights": sizes.generate-scaling($base: 1, $ratio: 1.15),
            "sizes": (
                "block": sizes.generate-scaling($base: 1.125, $ratio: 1.2),
                "inline": sizes.generate-scaling($base: 0.75, $ratio: 1.1006424163),
            ),
        ),
    )
);

/**
 * NOTE: The below spacings are mandatory in ALL themes! They are statically
 * referenced in the main Framework and Component stylesheets
 */

@include variables.define-variables(
    (
        "spacings": (
            "block": sizes.generate-scaling($base: 0.125, $ratio: 2),
        ),
    )
);

/**
 * NOTE: The below spacings can be renamed or otherwise added / removed as desired
 */

@include constants.define-constants(
    (
        "spacings": (
            "none": 0px,
            "auto": auto,
        ),
    )
);

/**
 * NOTE: The below sizes are mandatory in ALL themes! They are statically
 * referenced in the main Framework and Component stylesheets
 */

@include variables.define-variables(
    (
        "sizes": (
            "borders": sizes.generate-stepping($base: 1px, $stepping: 1px),
            "block": sizes.generate-scaling($base: 9.5, $ratio: 1.2),
            "icon": sizes.generate-stepping($base: 16px, $stepping: 8px),
            "prose": 65ch,
        ),
    )
);

/**
 * NOTE: The below sizes can be renamed or otherwise added / removed as desired
 *
 * NOTE: `%` suffixed units are special cased to be used for `viewport-`
 * size global attribute values also
 */

@include constants.define-constants(
    (
        "sizes": (
            "none": 0px,
            "auto": auto,
            "25": 25%,
            "33": 33%,
            "50": 50%,
            "66": 66%,
            "75": 75%,
            "100": 100%,
            "content-fit": fit-content,
            "content-max": max-content,
            "content-min": min-content,
        ),
    )
);

/**
 * NOTE: The below radii can be renamed or otherwise added / removed as desired
 */

@include constants.define-constants(
    (
        "radius": (
            "none": none,
        ),
    )
);

@include variables.define-variables(
    (
        "radius": sizes.generate-scaling($base: 0.125, $ratio: 2),
        "shapes": (
            "circle": 100%,
            "pill": 9999px,
        ),
    )
);

/**
 * NOTE: The below easings can be renamed or otherwise added / removed as desired
 */

@include variables.define-variables(
    (
        "easings": (
            "unknown": cubic-bezier(0.4, 0, 0.6, 1),
            "ease-out-quad": cubic-bezier(0.25, 0.46, 0.45, 0.94),
        ),
    )
);

/**
 * NOTE: The below animation tiers are mandatory in ALL themes! They are statically
 * referenced in the main Framework and Component stylesheets
 */

@include variables.define-variables(
    (
        "animations": (
            "attention":
                animations.generate-tier(
                    $duration: 1.5s,
                    $function: variables.format-var("easings.unknown")
                ),
            "movement":
                animations.generate-tier(
                    $duration: 0.25s,
                    $function: variables.format-var("easings.ease-out-quad")
                ),
            "reveal":
                animations.generate-tier(
                    $duration: 0.3s,
                    $function: variables.format-var("easings.ease-out-quad")
                ),
            "visual":
                animations.generate-tier(
                    $duration: 0.2s,
                    $function: variables.format-var("easings.ease-out-quad")
                ),
        ),
    )
);

/**
 * NOTE: The below elevation tiers can be renamed or otherwise added / removed as desired
 */

// TODO: Create function that generates the tiers of elevations
// HACK: `highest` is same as `higher`

@include constants.define-constants(
    (
        "elevations": (
            "none": none,
        ),
    )
);

@include variables.define-variables(
    (
        "elevations": (
            "lowest": (
                0 1px 2px 0 rgb(0 0 0/0.05),
            ),
            "lower": (
                0 1px 3px 0 rgb(0 0 0/0.1),
                0 1px 2px -1px rgb(0 0 0/0.1),
            ),
            "low": (
                0 4px 6px -1px rgb(0 0 0/0.1),
                0 2px 4px -2px rgb(0 0 0/0.1),
            ),
            "medium": (
                0 10px 15px -3px rgb(0 0 0/0.1),
                0 4px 6px -4px rgb(0 0 0/0.1),
            ),
            "high": (
                0 20px 25px -5px rgb(0 0 0/0.1),
                0 8px 10px -6px rgb(0 0 0/0.1),
            ),
            "higher": (
                0 25px 50px -12px rgb(0 0 0/0.25),
            ),
            "highest": (
                0 25px 50px -12px rgb(0 0 0/0.25),
            ),
        ),
    )
);
