@use "sass:map";

@use "../abstracts/maths";
@use "../abstracts/palettes";
@use "../abstracts/variables";
@use "../abstracts/viewports";
@use "../abstracts/themes";

:root {
    /** */

    --scrollbar-background: var(--palette-off-dark-lightest);
    --scrollbar-foreground: var(--palette-dark-normal);
    --scrollbar-size: theme("width.1");

    /** */

    --document-background: var(--palette-auto-off-lightest);
    --document-foreground: var(--palette-inverse-normal);

    --document-font-size: 16px;
    --document-font-line-height: 1.5rem;

    --selection-background: var(--palette-accent-boldest);
    --selection-foreground: var(--palette-light-normal);
}

/**
 * HACK: Really lame to have to duplicate dark mode variables
 */

@media (prefers-color-scheme: dark) {
    :root:not([data-palette]) {
        /** */

        --scrollbar-background: var(--palette-off-dark-boldest);
        --scrollbar-foreground: var(--palette-dark-normal);
    }
}

:root[data-palette="dark"] {
    /** */

    --scrollbar-background: var(--palette-off-dark-boldest);
    --scrollbar-foreground: var(--palette-dark-normal);
}

@mixin palette-theme-mode-declarations($background) {
    --palettes-auto-background-lightest: #{palettes.format-var(
            $background,
            "background",
            "lightest"
        )};
    --palettes-auto-background-lighter: #{palettes.format-var($background, "background", "lighter")};
    --palettes-auto-background-light: #{palettes.format-var($background, "background", "light")};

    --palettes-auto-background-normal: #{palettes.format-var($background, "background", "normal")};

    --palettes-auto-background-bold: #{palettes.format-var($background, "background", "bold")};
    --palettes-auto-background-bolder: #{palettes.format-var($background, "background", "bolder")};
    --palettes-auto-background-boldest: #{palettes.format-var($background, "background", "boldest")};

    /** */

    --palettes-auto-foreground-lightest: #{palettes.format-var(
            $background,
            "foreground",
            "lightest"
        )};
    --palettes-auto-foreground-lighter: #{palettes.format-var($background, "foreground", "lighter")};
    --palettes-auto-foreground-light: #{palettes.format-var($background, "foreground", "light")};

    --palettes-auto-foreground-normal: #{palettes.format-var($background, "foreground", "normal")};

    --palettes-auto-foreground-bold: #{palettes.format-var($background, "foreground", "bold")};
    --palettes-auto-foreground-bolder: #{palettes.format-var($background, "foreground", "bolder")};
    --palettes-auto-foreground-boldest: #{palettes.format-var($background, "foreground", "boldest")};
}

@mixin palette-stepping-declarations($background, $foreground, $base, $stepping) {
    --#{palettes.format-reference($background, "background", "lightest")}: #{palettes.get-shade(
            $background,
            maths.step($base, $stepping, 0),
            $is-raw: true
        )};
    --#{palettes.format-reference($background, "background", "lighter")}: #{palettes.get-shade(
            $background,
            maths.step($base, $stepping, 1),
            $is-raw: true
        )};
    --#{palettes.format-reference($background, "background", "light")}: #{palettes.get-shade(
            $background,
            maths.step($base, $stepping, 2),
            $is-raw: true
        )};

    --#{palettes.format-reference($background, "background", "normal")}: #{palettes.get-shade(
            $background,
            maths.step($base, $stepping, 3),
            $is-raw: true
        )};

    --#{palettes.format-reference($background, "background", "bold")}: #{palettes.get-shade(
            $background,
            maths.step($base, $stepping, 4),
            $is-raw: true
        )};
    --#{palettes.format-reference($background, "background", "bolder")}: #{palettes.get-shade(
            $background,
            maths.step($base, $stepping, 5),
            $is-raw: true
        )};
    --#{palettes.format-reference($background, "background", "boldest")}: #{palettes.get-shade(
            $background,
            maths.step($base, $stepping, 6),
            $is-raw: true
        )};

    /** */

    --#{palettes.format-reference($background, "foreground", "lightest")}: #{palettes.format-var(
            $foreground,
            "background",
            "lightest"
        )};
    --#{palettes.format-reference($background, "foreground", "lighter")}: #{palettes.format-var(
            $foreground,
            "background",
            "lighter"
        )};
    --#{palettes.format-reference($background, "foreground", "light")}: #{palettes.format-var(
            $foreground,
            "background",
            "light"
        )};

    --#{palettes.format-reference($background, "foreground", "normal")}: #{palettes.format-var(
            $foreground,
            "background",
            "normal"
        )};

    --#{palettes.format-reference($background, "foreground", "bold")}: #{palettes.format-var(
            $foreground,
            "background",
            "bold"
        )};
    --#{palettes.format-reference($background, "foreground", "bolder")}: #{palettes.format-var(
            $foreground,
            "background",
            "bolder"
        )};
    --#{palettes.format-reference($background, "foreground", "boldest")}: #{palettes.format-var(
            $foreground,
            "background",
            "boldest"
        )};
}

@include themes.query-theme-mode("light") {
    @include palette-stepping-declarations("dark", "light", 6, -1);
    @include palette-stepping-declarations("light", "dark", 0, -1);

    @include palettes.each() using ($background, $foreground) {
        @if $background != "dark" and $background != "light" {
            @include palette-stepping-declarations($background, $foreground, 6, -1);
        }
    }

    @include palette-theme-mode-declarations("light");
}

@include themes.query-theme-mode("dark") {
    @include palette-stepping-declarations("dark", "light", 0, 1);
    @include palette-stepping-declarations("light", "dark", -6, 1);

    @include palettes.each() using ($background, $foreground) {
        @if $background != "dark" and $background != "light" {
            @include palette-stepping-declarations($background, $foreground, -6, 1);
        }
    }

    @include palette-theme-mode-declarations("dark");
}

:root {
    /**
     *   NOTE: The Viewport variables below don't /actually/ do anything in
     *   the Framework. And are instead here to provide the Javascript side
     *   of things constants to reference
     */

    @include viewports.each() using ($name, $width, $minimum-width, $maximum-width) {
        --viewports-#{$name}-base: #{$width};
        --viewports-#{$name}-minimum: #{$minimum-width};
        --viewports-#{$name}-maximum: #{$maximum-width};
    }

    @include variables.each() using ($key, $value) {
        --#{variables.format-reference($key)}: #{$value};
    }
}
