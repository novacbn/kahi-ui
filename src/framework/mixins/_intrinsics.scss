@use "../abstracts/variables";

@mixin gap-all($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    // NOTE: Honestly `em` units would be a LOT simplier here. However some multi-part
    // Components might different font sizes on its children. So we need to pull from
    // the sizing variable instead

    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        gap: calc(
                (
                        var(--sizing-font-size-#{$sizing-tier}) *
                            #{variables.format-var("#{$namespace}.gap.y")}
                    ) *
                    #{$unit}
            )
            calc(
                (
                        var(--sizing-font-size-#{$sizing-tier}) *
                            #{variables.format-var("#{$namespace}.gap.x")}
                    ) *
                    #{$unit}
            );
    } @else if ($namespace) {
        gap: calc(#{variables.format-var("#{$namespace}.gap.y")} * #{$unit})
            calc(#{variables.format-var("#{$namespace}.gap.x")} * #{$unit});
    } @else {
        gap: calc(var(--spacing-y) * #{$unit}) calc(var(--spacing-x) * #{$unit});
    }
}

@mixin gap-x($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        column-gap: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.gap.x")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        column-gap: calc(#{variables.format-var("#{$namespace}.gap.x")} * #{$unit});
    } @else {
        column-gap: calc(var(--spacing-x) * #{$unit});
    }
}

@mixin gap-y($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        row-gap: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.gap.y")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        row-gap: calc(#{variables.format-var("#{$namespace}.gap.y")} * #{$unit});
    } @else {
        row-gap: calc(var(--spacing-y) * #{$unit});
    }
}

@mixin margin-all($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        margin: calc(
                (
                        var(--sizing-font-size-#{$sizing-tier}) *
                            #{variables.format-var("#{$namespace}.margin.y")}
                    ) *
                    #{$unit}
            )
            calc(
                (
                        var(--sizing-font-size-#{$sizing-tier}) *
                            #{variables.format-var("#{$namespace}.margin.x")}
                    ) *
                    #{$unit}
            );
    } @else if ($namespace) {
        margin: calc(#{variables.format-var("#{$namespace}.margin.y")} * #{$unit})
            calc(#{variables.format-var("#{$namespace}.margin.x")} * #{$unit});
    } @else {
        margin: calc(var(--spacing-y) * #{$unit}) calc(var(--spacing-x) * #{$unit});
    }
}

@mixin margin-x($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    @include margin-left($unit, $is-negative, $namespace, $sizing-tier);
    @include margin-right($unit, $is-negative, $namespace, $sizing-tier);
}

@mixin margin-y($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    @include margin-bottom($unit, $is-negative, $namespace, $sizing-tier);
    @include margin-top($unit, $is-negative, $namespace, $sizing-tier);
}

@mixin margin-bottom($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        margin-bottom: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.margin.y")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        margin-bottom: calc(#{variables.format-var("#{$namespace}.margin.y")} * #{$unit});
    } @else {
        margin-bottom: calc(var(--spacing-y) * #{$unit});
    }
}

@mixin margin-left($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        margin-left: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.margin.x")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        margin-left: calc(#{variables.format-var("#{$namespace}.margin.x")} * #{$unit});
    } @else {
        margin-left: calc(var(--spacing-x) * #{$unit});
    }
}

@mixin margin-right($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        margin-right: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.margin.x")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        margin-right: calc(#{variables.format-var("#{$namespace}.margin.x")} * #{$unit});
    } @else {
        margin-right: calc(var(--spacing-x) * #{$unit});
    }
}

@mixin margin-top($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        margin-top: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.margin.y")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        margin-top: calc(#{variables.format-var("#{$namespace}.margin.y")} * #{$unit});
    } @else {
        margin-top: calc(var(--spacing-y) * #{$unit});
    }
}

@mixin padding-all($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        padding: calc(
                (
                        var(--sizing-font-size-#{$sizing-tier}) *
                            #{variables.format-var("#{$namespace}.padding.y")}
                    ) *
                    #{$unit}
            )
            calc(
                (
                        var(--sizing-font-size-#{$sizing-tier}) *
                            #{variables.format-var("#{$namespace}.padding.x")}
                    ) *
                    #{$unit}
            );
    } @else if ($namespace) {
        padding: calc(#{variables.format-var("#{$namespace}.padding.y")} * #{$unit})
            calc(#{variables.format-var("#{$namespace}.padding.x")} * #{$unit});
    } @else {
        padding: calc(var(--spacing-y) * #{$unit}) calc(var(--spacing-x) * #{$unit});
    }
}

@mixin padding-x($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    @include padding-left($unit, $is-negative, $namespace, $sizing-tier);
    @include padding-right($unit, $is-negative, $namespace, $sizing-tier);
}

@mixin padding-y($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    @include padding-bottom($unit, $is-negative, $namespace, $sizing-tier);
    @include padding-top($unit, $is-negative, $namespace, $sizing-tier);
}

@mixin padding-bottom($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        padding-bottom: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.padding.y")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        padding-bottom: calc(#{variables.format-var("#{$namespace}.padding.y")} * #{$unit});
    } @else {
        padding-bottom: calc(var(--spacing-y) * #{$unit});
    }
}

@mixin padding-left($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        padding-left: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.padding.x")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        padding-left: calc(#{variables.format-var("#{$namespace}.padding.x")} * #{$unit});
    } @else {
        padding-left: calc(var(--spacing-x) * #{$unit});
    }
}

@mixin padding-right($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        padding-right: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.padding.x")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        padding-right: calc(#{variables.format-var("#{$namespace}.padding.x")} * #{$unit});
    } @else {
        padding-right: calc(var(--spacing-x) * #{$unit});
    }
}

@mixin padding-top($unit, $is-negative: false, $namespace: null, $sizing-tier: null) {
    $unit: if($is-negative, "-1#{$unit}", "1#{$unit}");

    @if $sizing-tier {
        padding-top: calc(
            (
                    var(--sizing-font-size-#{$sizing-tier}) *
                        #{variables.format-var("#{$namespace}.padding.y")}
                ) *
                #{$unit}
        );
    } @else if ($namespace) {
        padding-top: calc(#{variables.format-var("#{$namespace}.padding.y")} * #{$unit});
    } @else {
        padding-top: calc(var(--spacing-y) * #{$unit});
    }
}

@mixin size-all($namespace, $unit: null) {
    @include size-width($namespace, $unit);
    @include size-height($namespace, $unit);
}

@mixin size-max-all($namespace, $unit: null) {
    @include size-max-width($namespace, $unit);
    @include size-max-height($namespace, $unit);
}

@mixin size-min-all($namespace, $unit: null) {
    @include size-min-width($namespace, $unit);
    @include size-min-height($namespace, $unit);
}

@mixin size-height($namespace, $unit: null) {
    @if $unit {
        height: calc(#{variables.format-var("#{$namespace}.size.height")} * 1#{$unit});
    } @else {
        height: #{variables.format-var("#{$namespace}.size.height")};
    }
}

@mixin size-max-height($namespace, $unit: null) {
    @if $unit {
        max-height: calc(#{variables.format-var("#{$namespace}.size.max-height")} * 1#{$unit});
    } @else {
        max-height: #{variables.format-var("#{$namespace}.size.max-height")};
    }
}

@mixin size-min-height($namespace, $unit: null) {
    @if $unit {
        min-height: calc(#{variables.format-var("#{$namespace}.size.min-height")} * 1#{$unit});
    } @else {
        min-height: #{variables.format-var("#{$namespace}.size.min-height")};
    }
}

@mixin size-width($namespace, $unit: null) {
    @if $unit {
        width: calc(#{variables.format-var("#{$namespace}.size.width")} * 1#{$unit});
    } @else {
        width: #{variables.format-var("#{$namespace}.size.width")};
    }
}

@mixin size-max-width($namespace, $unit: null) {
    @if $unit {
        max-width: calc(#{variables.format-var("#{$namespace}.size.max-width")} * 1#{$unit});
    } @else {
        max-width: #{variables.format-var("#{$namespace}.size.max-width")};
    }
}

@mixin size-min-width($namespace, $unit: null) {
    @if $unit {
        min-width: calc(#{variables.format-var("#{$namespace}.size.min-width")} * 1#{$unit});
    } @else {
        min-width: #{variables.format-var("#{$namespace}.size.min-width")};
    }
}
