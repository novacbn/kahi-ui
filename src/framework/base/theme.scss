@use "sass:map";

@use "../abstracts/colors";
@use "../abstracts/palettes";
@use "../abstracts/variables";
@use "../abstracts/viewports";
@use "../abstracts/themes";

:root {
    /** */

    --scrollbar-background: var(--palette-off-dark-lightest);
    --scrollbar-foreground: var(--palette-dark-normal);
    --scrollbar-size: theme("width.1");

    /** */

    --document-background: var(--palette-auto-off-lightest);
    --document-foreground: var(--palette-inverse-normal);

    --document-font-size: 16px;
    --document-font-line-height: 1.5rem;

    --selection-background: var(--palette-accent-boldest);
    --selection-foreground: var(--palette-light-normal);
}

/**
 * HACK: Really lame to have to duplicate dark mode variables
 */

@media (prefers-color-scheme: dark) {
    :root:not([data-palette]) {
        /** */

        --scrollbar-background: var(--palette-off-dark-boldest);
        --scrollbar-foreground: var(--palette-dark-normal);
    }
}

:root[data-palette="dark"] {
    /** */

    --scrollbar-background: var(--palette-off-dark-boldest);
    --scrollbar-foreground: var(--palette-dark-normal);
}

@mixin palette-theme-mode-declarations($background) {
    /** */

    --palettes-auto-background-lightest: #{palettes.format-var(
            $background,
            "background",
            "lightest"
        )};
    --palettes-auto-background-lighter: #{palettes.format-var($background, "background", "lighter")};
    --palettes-auto-background-light: #{palettes.format-var($background, "background", "light")};

    --palettes-auto-background-normal: #{palettes.format-var($background, "background", "normal")};

    --palettes-auto-background-bold: #{palettes.format-var($background, "background", "bold")};
    --palettes-auto-background-bolder: #{palettes.format-var($background, "background", "bolder")};
    --palettes-auto-background-boldest: #{palettes.format-var($background, "background", "boldest")};

    /** */

    --palettes-auto-foreground-lightest: #{palettes.format-var(
            $background,
            "foreground",
            "lightest"
        )};
    --palettes-auto-foreground-lighter: #{palettes.format-var($background, "foreground", "lighter")};
    --palettes-auto-foreground-light: #{palettes.format-var($background, "foreground", "light")};

    --palettes-auto-foreground-normal: #{palettes.format-var($background, "foreground", "normal")};

    --palettes-auto-foreground-bold: #{palettes.format-var($background, "foreground", "bold")};
    --palettes-auto-foreground-bolder: #{palettes.format-var($background, "foreground", "bolder")};
    --palettes-auto-foreground-boldest: #{palettes.format-var($background, "foreground", "boldest")};
}

@mixin palette-declarations($background, $foreground, $palette) {
    /* */

    // HACK: SASS unfortunately reduces colors down to built-in CSS color
    // names when applicable. So we need to normalize them here

    --#{palettes.format-reference($background, "background", "lightest")}: #{colors.normalize-hsl(
            palettes.get("#{$background}.palettes.#{$palette}.lightest"),
            $is-raw: true
        )};
    --#{palettes.format-reference($background, "background", "lighter")}: #{colors.normalize-hsl(
            palettes.get("#{$background}.palettes.#{$palette}.lighter"),
            $is-raw: true
        )};
    --#{palettes.format-reference($background, "background", "light")}: #{colors.normalize-hsl(
            palettes.get("#{$background}.palettes.#{$palette}.light"),
            $is-raw: true
        )};

    --#{palettes.format-reference($background, "background", "normal")}: #{colors.normalize-hsl(
            palettes.get("#{$background}.palettes.#{$palette}.normal"),
            $is-raw: true
        )};

    --#{palettes.format-reference($background, "background", "bold")}: #{colors.normalize-hsl(
            palettes.get("#{$background}.palettes.#{$palette}.bold"),
            $is-raw: true
        )};
    --#{palettes.format-reference($background, "background", "bolder")}: #{colors.normalize-hsl(
            palettes.get("#{$background}.palettes.#{$palette}.bolder"),
            $is-raw: true
        )};
    --#{palettes.format-reference($background, "background", "boldest")}: #{colors.normalize-hsl(
            palettes.get("#{$background}.palettes.#{$palette}.boldest"),
            $is-raw: true
        )};

    /** */

    --#{palettes.format-reference($background, "foreground", "lightest")}: #{palettes.format-var(
            $foreground,
            "background",
            "lightest"
        )};
    --#{palettes.format-reference($background, "foreground", "lighter")}: #{palettes.format-var(
            $foreground,
            "background",
            "lighter"
        )};
    --#{palettes.format-reference($background, "foreground", "light")}: #{palettes.format-var(
            $foreground,
            "background",
            "light"
        )};

    --#{palettes.format-reference($background, "foreground", "normal")}: #{palettes.format-var(
            $foreground,
            "background",
            "normal"
        )};

    --#{palettes.format-reference($background, "foreground", "bold")}: #{palettes.format-var(
            $foreground,
            "background",
            "bold"
        )};
    --#{palettes.format-reference($background, "foreground", "bolder")}: #{palettes.format-var(
            $foreground,
            "background",
            "bolder"
        )};
    --#{palettes.format-reference($background, "foreground", "boldest")}: #{palettes.format-var(
            $foreground,
            "background",
            "boldest"
        )};
}

@include themes.query-theme-mode("light") {
    @include palettes.each() using ($background, $foreground) {
        @include palette-declarations($background, $foreground, "light");
    }

    @include palette-theme-mode-declarations("light");
}

@include themes.query-theme-mode("dark") {
    @include palettes.each() using ($background, $foreground) {
        @include palette-declarations($background, $foreground, "dark");
    }

    @include palette-theme-mode-declarations("dark");
}

:root {
    /**
     *   NOTE: The Viewport variables below don't /actually/ do anything in
     *   the Framework. And are instead here to provide the Javascript side
     *   of things constants to reference
     */

    @include viewports.each() using ($name, $width, $minimum-width, $maximum-width) {
        --viewports-#{$name}-base: #{$width};
        --viewports-#{$name}-minimum: #{$minimum-width};
        --viewports-#{$name}-maximum: #{$maximum-width};
    }

    @include variables.each() using ($key, $value) {
        --#{variables.format-reference($key)}: #{$value};
    }
}
