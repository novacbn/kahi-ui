.widget {
    --sizing-text-size: var(--widget-sizing-text-size);
    --sizing-text-line-height: var(--widget-sizing-text-line-height);

    display: grid;
    grid-auto-rows: 1fr;
    grid-auto-flow: row;

    gap: var(--widget-gap);

    font-size: var(--sizing-text-size);
    line-height: var(--sizing-text-line-height);
}

.widget button {
    all: unset;

    display: flex;
    align-items: center;
    justify-content: center;

    padding: var(--widget-button-padding-y) var(--widget-button-padding-x);

    border: var(--widget-button-border-width) solid transparent;
    border-radius: var(--widget-button-border-radius);
    background: transparent;

    font-weight: var(--widget-button-font-weight);

    cursor: pointer;
    user-select: none;

    transform: unset !important;

    transition: background var(--animation-visual-duration) var(--animation-visual-function),
        border-color var(--animation-visual-duration) var(--animation-visual-function),
        color var(--animation-visual-duration) var(--animation-visual-function);

    &:disabled {
        cursor: not-allowed;
        opacity: var(--widget-button-disabled-opacity);
    }

    &:not([data-palette]) {
        --palette-background-bold: inherit;
        --palette-background-normal: inherit;
        --palette-foreground-normal: inherit;
    }

    &:not([data-variation]) {
        &:not([data-palette]) {
            color: rgb(var(--palette-foreground-normal));

            &:not(:disabled) {
                &:is(:focus, :hover) {
                    background: rgba(
                        var(--palette-foreground-normal),
                        var(--widget-button-clear-focus-background-opacity)
                    );
                }

                &:is(:active, [aria-pressed="true"]) {
                    background: rgba(
                        var(--palette-foreground-normal),
                        var(--widget-button-clear-active-background-opacity)
                    );
                    color: rgb(var(--palette-background-bold));
                }
            }
        }

        &[data-palette] {
            color: rgb(var(--palette-background-bold));

            &:not(:disabled) {
                &:is(:focus, :hover) {
                    background: rgba(
                        var(--palette-background-bold),
                        var(--widget-button-clear-focus-background-opacity)
                    );
                }

                &:is(:active, [aria-current], [aria-pressed="true"]) {
                    background: rgba(
                        var(--palette-background-bold),
                        var(--widget-button-clear-active-background-opacity)
                    );
                    color: rgb(var(--palette-foreground-normal));
                }
            }
        }
    }

    &[data-variation="outline"] {
        &:not([data-palette]) {
            border-color: rgb(var(--palette-foreground-normal));
            color: rgb(var(--palette-foreground-normal));

            &:not(:disabled) {
                &:is(:focus, :hover) {
                    background: rgba(
                        var(--palette-foreground-normal),
                        var(--widget-button-outline-focus-background-opacity)
                    );
                    border-color: rgba(
                        var(--palette-foreground-normal),
                        var(--widget-button-outline-focus-border-opacity)
                    );
                }

                &:is(:active, [aria-pressed="true"]) {
                    background: rgba(
                        var(--palette-foreground-normal),
                        var(--widget-button-outline-active-background-opacity)
                    );
                    border-color: transparent;
                    color: rgb(var(--palette-background-bold));
                }
            }
        }

        &[data-palette] {
            border-color: rgb(var(--palette-background-bold));
            color: rgb(var(--palette-background-bold));

            &:not(:disabled) {
                &:is(:focus, :hover) {
                    background: rgba(
                        var(--palette-background-bold),
                        var(--widget-button-outline-focus-background-opacity)
                    );
                    border-color: rgba(
                        var(--palette-background-bold),
                        var(--widget-button-outline-focus-border-opacity)
                    );
                }

                &:is(:active, [aria-current], [aria-pressed="true"]) {
                    background: rgba(
                        var(--palette-background-bold),
                        var(--widget-button-outline-active-background-opacity)
                    );
                    border-color: transparent;
                    color: rgb(var(--palette-foreground-normal));
                }
            }
        }
    }
}

.widget header {
    display: flex;
    align-items: center;
    justify-content: center;

    font-size: 80%;
    font-weight: bold;

    letter-spacing: 0.1em;

    opacity: 0.8;
}

.widget section {
    display: grid;
    gap: var(--spacing-local-small);

    &:not([data-orientation]) {
        grid-auto-columns: 1fr;
        grid-auto-flow: column;
    }

    &[data-orientation~="vertical"] {
        grid-auto-rows: 1fr;
        grid-auto-flow: row;
    }
}
